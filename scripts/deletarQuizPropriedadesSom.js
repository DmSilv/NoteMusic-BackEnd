const mongoose = require('mongoose');
require('dotenv').config();

const Quiz = require('../src/models/Quiz');
const Module = require('../src/models/Module');

/**
 * Script para deletar o quiz gen√©rico "Propriedades do Som"
 * que cont√©m apenas perguntas gen√©ricas (meta-informa√ß√£o)
 * 
 * Os quizzes corretos de ALTURA, INTENSIDADE, TIMBRE e DURA√á√ÉO
 * j√° existem no banco e est√£o funcionando corretamente.
 */
const deletarQuizGenerico = async () => {
  try {
    await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/notemusic');
    console.log('‚úÖ Conectado ao MongoDB\n');

    console.log('üóëÔ∏è  DELETANDO QUIZ GEN√âRICO "PROPRIEDADES DO SOM"\n');
    console.log('='.repeat(80));

    // Buscar o quiz problem√°tico
    const quizProblematico = await Quiz.findOne({ 
      title: { $regex: /^Quiz - Propriedades do Som$/i }
    });

    if (!quizProblematico) {
      console.log('‚ÑπÔ∏è  Quiz gen√©rico n√£o encontrado. Pode j√° ter sido deletado.');
      process.exit(0);
    }

    console.log(`\nüìã Quiz encontrado:`);
    console.log(`   T√≠tulo: ${quizProblematico.title}`);
    console.log(`   ID: ${quizProblematico._id}`);
    console.log(`   N√≠vel: ${quizProblematico.level}`);
    console.log(`   Perguntas: ${quizProblematico.questions.length}`);

    // Mostrar as perguntas antes de deletar
    console.log(`\nüìù Perguntas que ser√£o removidas:`);
    quizProblematico.questions.forEach((q, idx) => {
      console.log(`   ${idx + 1}. "${q.question.substring(0, 60)}..."`);
    });

    // Verificar se √© realmente o quiz gen√©rico
    const hasGenericQuestions = quizProblematico.questions.some(q => 
      q.question.includes('m√≥dulo') && q.question.includes('descreve')
    );

    if (!hasGenericQuestions) {
      console.log('\n‚ö†Ô∏è  ATEN√á√ÉO: Este quiz n√£o parece ser o gen√©rico!');
      console.log('   Cancelando opera√ß√£o por seguran√ßa.');
      process.exit(1);
    }

    // Buscar o m√≥dulo associado
    const module = await Module.findById(quizProblematico.moduleId);
    if (module) {
      console.log(`\nüìö M√≥dulo associado: ${module.title}`);
    }

    // Deletar o quiz
    console.log(`\nüóëÔ∏è  Deletando quiz...`);
    await Quiz.findByIdAndDelete(quizProblematico._id);
    console.log(`‚úÖ Quiz deletado com sucesso!`);

    // Se houver m√≥dulo associado, remover a refer√™ncia ao quiz
    if (module) {
      console.log(`\nüîÑ Removendo refer√™ncia do quiz no m√≥dulo...`);
      await Module.findByIdAndUpdate(module._id, {
        $pull: { quizzes: quizProblematico._id }
      });
      console.log(`‚úÖ Refer√™ncia removida!`);
    }

    // Verificar quantos quizzes de aprendiz restaram
    console.log('\n' + '='.repeat(80));
    console.log('\nüìä QUIZZES DE APRENDIZ AP√ìS REMO√á√ÉO:\n');
    
    const remainingQuizzes = await Quiz.find({ level: 'aprendiz' });
    console.log(`Total: ${remainingQuizzes.length} quizzes\n`);
    
    remainingQuizzes.forEach(quiz => {
      console.log(`‚úÖ ${quiz.title} - ${quiz.questions.length} perguntas`);
    });

    // Verificar se os quizzes de propriedades do som corretos existem
    console.log('\n' + '='.repeat(80));
    console.log('\nüîç VERIFICANDO QUIZZES CORRETOS DE PROPRIEDADES DO SOM:\n');
    
    const propriedadesSomQuizzes = ['ALTURA', 'INTENSIDADE', 'TIMBRE', 'DURA√á√ÉO'];
    
    for (const prop of propriedadesSomQuizzes) {
      const quiz = await Quiz.findOne({ 
        title: { $regex: new RegExp(prop, 'i') },
        level: 'aprendiz'
      });
      
      if (quiz) {
        console.log(`‚úÖ ${prop}: Quiz encontrado com ${quiz.questions.length} perguntas`);
      } else {
        console.log(`‚ùå ${prop}: Quiz N√ÉO encontrado!`);
      }
    }

    console.log('\n' + '='.repeat(80));
    console.log('\n‚úÖ OPERA√á√ÉO CONCLU√çDA COM SUCESSO!');
    console.log('   O quiz gen√©rico foi removido.');
    console.log('   Os quizzes corretos de ALTURA, INTENSIDADE, TIMBRE e DURA√á√ÉO');
    console.log('   permanecem no banco de dados.');
    
    process.exit(0);
  } catch (error) {
    console.error('\n‚ùå Erro:', error);
    process.exit(1);
  }
};

deletarQuizGenerico();

