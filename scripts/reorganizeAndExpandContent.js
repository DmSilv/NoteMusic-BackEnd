const mongoose = require('mongoose');
require('dotenv').config();

const Module = require('../src/models/Module');
const Quiz = require('../src/models/Quiz');

// Conectar ao banco
const connectDB = async () => {
  try {
    await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/notemusic');
    console.log('‚úÖ Conectado ao MongoDB');
  } catch (error) {
    console.error('‚ùå Erro ao conectar:', error);
    process.exit(1);
  }
};

// Limpar dados existentes
const clearExistingData = async () => {
  try {
    console.log('üßπ Limpando dados existentes...');
    
    await Quiz.deleteMany({});
    await Module.deleteMany({});
    
    console.log('‚úÖ Dados existentes removidos');
  } catch (error) {
    console.error('‚ùå Erro ao limpar dados:', error);
    throw error;
  }
};

// Criar m√≥dulos expandidos com distribui√ß√£o equilibrada
const createExpandedModules = async () => {
  try {
    console.log('üìö Criando m√≥dulos expandidos...');
    
    const modules = [
      // N√çVEL APRENDIZ - 8 m√≥dulos
      {
        title: 'Propriedades do Som - Os Pilares da M√∫sica',
        description: 'Aprenda sobre frequ√™ncia, timbre, intensidade e dura√ß√£o do som',
        category: 'propriedades-som',
        level: 'aprendiz',
        order: 1,
        points: 50,
        duration: 15,
        content: {
          theory: 'O som √© uma onda mec√¢nica que se propaga atrav√©s de um meio material. Possui quatro propriedades principais: altura (frequ√™ncia), timbre, intensidade e dura√ß√£o.',
          examples: [
            { title: 'Timbre Instrumental', description: 'Diferentes instrumentos tocando a mesma nota' },
            { title: 'Din√¢mica Musical', description: 'Varia√ß√£o de volume em uma m√∫sica' },
            { title: 'Dura√ß√£o das Notas', description: 'Notas longas e curtas' }
          ],
          exercises: [
            { title: 'Identifica√ß√£o de Propriedades', description: 'Identificar propriedades do som', type: 'audicao' },
            { title: 'Reconhecimento de Timbre', description: 'Reconhecer timbres instrumentais', type: 'audicao' }
          ]
        },
        isActive: true
      },
      {
        title: 'Notas Musicais e Solfejo - O ABC da M√∫sica',
        description: 'Domine as 7 notas musicais e o solfejo b√°sico',
        category: 'solfegio-basico',
        level: 'aprendiz',
        order: 2,
        points: 50,
        duration: 20,
        content: {
          theory: 'As sete notas musicais (D√≥, R√©, Mi, F√°, Sol, L√°, Si) formam a base da m√∫sica ocidental. O solfejo √© a t√©cnica de cantar as notas usando s√≠labas espec√≠ficas.',
          examples: ['Escala de D√≥ maior', 'Sequ√™ncias mel√≥dicas simples', 'Exerc√≠cios de solfejo'],
          exercises: ['Cantar escalas', 'Identificar notas', 'Solfejo r√≠tmico']
        },
        isActive: true
      },
      {
        title: 'Pauta Musical e Claves - Onde Escrevemos a M√∫sica',
        description: 'Entenda a pauta musical e os diferentes tipos de claves',
        category: 'solfegio-basico',
        level: 'aprendiz',
        order: 3,
        points: 50,
        duration: 18,
        content: {
          theory: 'A pauta musical √© formada por 5 linhas e 4 espa√ßos onde escrevemos as notas. As claves determinam a altura das notas na pauta.',
          examples: ['Clave de Sol', 'Clave de F√°', 'Posi√ß√£o das notas na pauta'],
          exercises: ['Desenhar pautas', 'Identificar claves', 'Posicionar notas']
        },
        isActive: true
      },
      {
        title: 'Figuras de Valor - A Dura√ß√£o das Notas',
        description: 'Aprenda sobre semibreve, m√≠nima, sem√≠nima e outras figuras',
        category: 'figuras-musicais',
        level: 'aprendiz',
        order: 4,
        points: 50,
        duration: 25,
        content: {
          theory: 'As figuras musicais representam a dura√ß√£o das notas. A semibreve vale 4 tempos, a m√≠nima vale 2, a sem√≠nima vale 1, e assim por diante.',
          examples: ['Semibreve (4 tempos)', 'M√≠nima (2 tempos)', 'Sem√≠nima (1 tempo)', 'Colcheia (1/2 tempo)'],
          exercises: ['Contar tempos', 'Identificar figuras', 'Criar ritmos']
        },
        isActive: true
      },
      {
        title: 'Compassos Simples - Organizando o Tempo',
        description: 'Domine os compassos 2/4, 3/4 e 4/4',
        category: 'compasso-simples',
        level: 'aprendiz',
        order: 5,
        points: 50,
        duration: 22,
        content: {
          theory: 'O compasso divide a m√∫sica em unidades regulares de tempo. O numerador indica quantos tempos por compasso, o denominador indica a figura que vale 1 tempo.',
          examples: ['Compasso 4/4 (4 sem√≠nimas)', 'Compasso 3/4 (3 sem√≠nimas)', 'Compasso 2/4 (2 sem√≠nimas)'],
          exercises: ['Bater compassos', 'Identificar tipos', 'Criar padr√µes r√≠tmicos']
        },
        isActive: true
      },
      {
        title: 'Escalas Maiores - A Base da Harmonia',
        description: 'Aprenda a construir escalas maiores e suas f√≥rmulas',
        category: 'escalas-maiores',
        level: 'aprendiz',
        order: 6,
        points: 50,
        duration: 30,
        content: {
          theory: 'A escala maior √© formada pela sequ√™ncia: tom-tom-semitom-tom-tom-tom-semitom. √â a base da harmonia tonal ocidental.',
          examples: ['Escala de D√≥ maior', 'Escala de Sol maior', 'F√≥rmula da escala maior'],
          exercises: ['Construir escalas', 'Identificar acidentes', 'Tocar escalas']
        },
        isActive: true
      },
      {
        title: 'Din√¢mica Musical - Forte e Piano',
        description: 'Entenda os sinais de din√¢mica e express√£o',
        category: 'andamento-dinamica',
        level: 'aprendiz',
        order: 7,
        points: 50,
        duration: 15,
        content: {
          theory: 'A din√¢mica musical controla o volume e a intensidade. Os principais sinais s√£o: p (piano), f (forte), mf (mezzo forte), mp (mezzo piano).',
          examples: ['pp, p, mp, mf, f, ff', 'Crescendo e diminuendo', 'Sforzando'],
          exercises: ['Aplicar din√¢mica', 'Reconhecer sinais', 'Expressar musicalmente']
        },
        isActive: true
      },
      {
        title: 'Acidentes Musicais - Sustenido e Bemol',
        description: 'Domine os acidentes e suas fun√ß√µes',
        category: 'figuras-musicais',
        level: 'aprendiz',
        order: 8,
        points: 50,
        duration: 20,
        content: {
          theory: 'Os acidentes alteram a altura das notas. Sustenido (#) sobe meio tom, bemol (b) desce meio tom, bequadro (‚ôÆ) cancela acidentes.',
          examples: ['D√≥# = R√©b', 'F√°# = Solb', 'Acidentes na armadura'],
          exercises: ['Identificar acidentes', 'Aplicar altera√ß√µes', 'Reconhecer enarmonias']
        },
        isActive: true
      },

      // N√çVEL VIRTUOSO - 6 m√≥dulos
      {
        title: 'Escalas Menores - A Express√£o Musical',
        description: 'Aprenda escalas menores naturais, harm√¥nicas e mel√≥dicas',
        category: 'escalas-maiores',
        level: 'virtuoso',
        order: 1,
        points: 75,
        duration: 35,
        content: {
          theory: 'As escalas menores t√™m tr√™s formas: natural (tom-semitom-tom-tom-semitom-tom-tom), harm√¥nica (7¬™ elevada) e mel√≥dica (6¬™ e 7¬™ elevadas na subida).',
          examples: ['L√° menor natural', 'L√° menor harm√¥nica', 'L√° menor mel√≥dica'],
          exercises: ['Construir escalas menores', 'Identificar tipos', 'Aplicar em composi√ß√£o']
        },
        isActive: true
      },
      {
        title: 'Intervalos Musicais - A Dist√¢ncia Entre as Notas',
        description: 'Domine intervalos consonantes e dissonantes',
        category: 'intervalos-musicais',
        level: 'virtuoso',
        order: 2,
        points: 75,
        duration: 40,
        content: {
          theory: 'Intervalo √© a dist√¢ncia entre duas notas. Classificamos por quantidade (un√≠ssono, 2¬™, 3¬™, etc.) e qualidade (maior, menor, justo, aumentado, diminuto).',
          examples: ['3¬™ maior (D√≥-Mi)', '5¬™ justa (D√≥-Sol)', '7¬™ menor (D√≥-Sib)'],
          exercises: ['Identificar intervalos', 'Classificar qualidades', 'Tocar intervalos']
        },
        isActive: true
      },
      {
        title: 'Acordes B√°sicos - A Harmonia em A√ß√£o',
        description: 'Aprenda tr√≠ades maiores, menores e diminutas',
        category: 'intervalos-musicais',
        level: 'virtuoso',
        order: 3,
        points: 75,
        duration: 45,
        content: {
          theory: 'Acorde √© a combina√ß√£o simult√¢nea de tr√™s ou mais notas. A tr√≠ade b√°sica √© formada por t√¥nica, ter√ßa e quinta.',
          examples: ['D√≥ maior (C-E-G)', 'L√° menor (A-C-E)', 'Si diminuto (B-D-F)'],
          exercises: ['Construir tr√≠ades', 'Identificar tipos', 'Tocar progress√µes']
        },
        isActive: true
      },
      {
        title: 'Modos Gregos - As Cores da M√∫sica',
        description: 'Explore os 7 modos gregos e suas caracter√≠sticas',
        category: 'escalas-maiores',
        level: 'virtuoso',
        order: 4,
        points: 75,
        duration: 50,
        content: {
          theory: 'Os modos gregos s√£o escalas derivadas da escala maior, cada uma com sua caracter√≠stica √∫nica: J√¥nio, D√≥rico, Fr√≠gio, L√≠dio, Mixol√≠dio, E√≥lio, L√≥crio.',
          examples: ['Modo D√≥rico (R√©-D√≥)', 'Modo L√≠dio (F√°-Sol)', 'Modo Mixol√≠dio (Sol-F√°)'],
          exercises: ['Construir modos', 'Identificar caracter√≠sticas', 'Aplicar em improvisa√ß√£o']
        },
        isActive: true
      },
      {
        title: 'S√≠ncopa e Contratempo - Ritmo Avan√ßado',
        description: 'Domine ritmos sincopados e contratempos',
        category: 'sincopa-contratempo',
        level: 'virtuoso',
        order: 5,
        points: 75,
        duration: 30,
        content: {
          theory: 'S√≠ncopa √© o deslocamento do acento r√≠tmico. Contratempo √© a execu√ß√£o de notas nos tempos fracos.',
          examples: ['S√≠ncopa simples', 'Contratempo b√°sico', 'Padr√µes complexos'],
          exercises: ['Executar s√≠ncopas', 'Criar contratempos', 'Aplicar em composi√ß√£o']
        },
        isActive: true
      },
      {
        title: 'Articula√ß√£o Musical - T√©cnicas de Execu√ß√£o',
        description: 'Aprenda staccato, legato, portato e outras articula√ß√µes',
        category: 'articulacao-musical',
        level: 'virtuoso',
        order: 6,
        points: 75,
        duration: 25,
        content: {
          theory: 'Articula√ß√£o √© a forma como as notas s√£o executadas: staccato (separado), legato (ligado), portato (semi-ligado), tenuto (sustentado).',
          examples: ['Staccato (.)', 'Legato (curva)', 'Portato (ponto e linha)', 'Tenuto (-)'],
          exercises: ['Aplicar articula√ß√µes', 'Reconhecer sinais', 'Expressar musicalmente']
        },
        isActive: true
      },

      // N√çVEL MAESTRO - 5 m√≥dulos
      {
        title: 'Harmonia Avan√ßada - A Orquestra√ß√£o Completa',
        description: 'Domine acordes de s√©tima, nona e extens√µes',
        category: 'expressao-musical',
        level: 'maestro',
        order: 1,
        points: 100,
        duration: 60,
        content: {
          theory: 'Harmonia avan√ßada inclui acordes de s√©tima (maior, menor, dominante, diminuto), nona, d√©cima primeira e d√©cima terceira, al√©m de substitui√ß√µes tr√≠tonas.',
          examples: ['Cmaj7 (C-E-G-B)', 'Dm7 (D-F-A-C)', 'G7 (G-B-D-F)', 'Cm7b5 (C-Eb-Gb-Bb)'],
          exercises: ['Construir acordes complexos', 'Aplicar substitui√ß√µes', 'Criar progress√µes avan√ßadas']
        },
        isActive: true
      },
      {
        title: 'Contraponto - A Arte da Voz Independente',
        description: 'Aprenda as regras do contraponto e fuga',
        category: 'expressao-musical',
        level: 'maestro',
        order: 2,
        points: 100,
        duration: 70,
        content: {
          theory: 'Contraponto √© a arte de combinar melodias independentes. Inclui movimento direto, contr√°rio, obl√≠quo, conson√¢ncias perfeitas e imperfeitas.',
          examples: ['C√¢none simples', 'Fuga b√°sica', 'Contraponto a 2 vozes'],
          exercises: ['Escrever contraponto', 'Analisar fugas', 'Criar c√¢nones']
        },
        isActive: true
      },
      {
        title: 'Orquestra√ß√£o - Pintando com Sons',
        description: 'Aprenda a orquestrar para diferentes instrumentos',
        category: 'compasso-composto',
        level: 'maestro',
        order: 3,
        points: 100,
        duration: 80,
        content: {
          theory: 'Orquestra√ß√£o √© a arte de distribuir material musical entre diferentes instrumentos, considerando tessitura, timbre, din√¢mica e textura.',
          examples: ['Se√ß√µes da orquestra', 'Tessituras instrumentais', 'Efeitos especiais'],
          exercises: ['Orquestrar melodias', 'Criar texturas', 'Balancear se√ß√µes']
        },
        isActive: true
      },
      {
        title: 'Compasso Composto - 6/8, 9/8, 12/8',
        description: 'Domine os compassos compostos e suas subdivis√µes',
        category: 'compasso-composto',
        level: 'maestro',
        order: 4,
        points: 100,
        duration: 40,
        content: {
          theory: 'Compassos compostos t√™m subdivis√£o tern√°ria. O numerador indica o n√∫mero de subdivis√µes, o denominador indica a figura que vale uma subdivis√£o.',
          examples: ['6/8 (2 grupos de 3 colcheias)', '9/8 (3 grupos de 3 colcheias)', '12/8 (4 grupos de 3 colcheias)'],
          exercises: ['Bater compassos compostos', 'Identificar subdivis√µes', 'Criar ritmos complexos']
        },
        isActive: true
      },
      {
        title: 'Modula√ß√£o - Mudan√ßa de Tonalidade',
        description: 'Aprenda a modular entre diferentes tonalidades',
        category: 'expressao-musical',
        level: 'maestro',
        order: 5,
        points: 100,
        duration: 55,
        content: {
          theory: 'Modula√ß√£o √© a mudan√ßa de tonalidade durante uma pe√ßa musical. Pode ser direta, por acorde piv√¥, enarm√¥nica ou crom√°tica.',
          examples: ['Modula√ß√£o por 5¬™ justa', 'Acorde piv√¥ comum', 'Modula√ß√£o crom√°tica'],
          exercises: ['Criar modula√ß√µes', 'Identificar acordes piv√¥', 'Analisar mudan√ßas tonais']
        },
        isActive: true
      }
    ];

    const createdModules = await Module.insertMany(modules);
    console.log(`‚úÖ ${createdModules.length} m√≥dulos criados`);
    
    return createdModules;
  } catch (error) {
    console.error('‚ùå Erro ao criar m√≥dulos:', error);
    throw error;
  }
};

// Criar quizzes com 7 perguntas cada
const createExpandedQuizzes = async (modules) => {
  try {
    console.log('üéØ Criando quizzes expandidos...');
    
    const quizzes = [];
    
    modules.forEach(module => {
      const quiz = {
        title: `Quiz - ${module.title}`,
        description: `Teste seus conhecimentos sobre ${module.title.toLowerCase()}`,
        moduleId: module._id,
        level: module.level,
        category: module.category,
        questions: generateQuestionsForModule(module),
        isActive: true
      };
      
      quizzes.push(quiz);
    });

    const createdQuizzes = await Quiz.insertMany(quizzes);
    console.log(`‚úÖ ${createdQuizzes.length} quizzes criados`);
    
    return createdQuizzes;
  } catch (error) {
    console.error('‚ùå Erro ao criar quizzes:', error);
    throw error;
  }
};

// Gerar 7 perguntas espec√≠ficas para cada m√≥dulo
const generateQuestionsForModule = (module) => {
  const questions = [];
  
  // Perguntas baseadas no n√≠vel e categoria do m√≥dulo
  if (module.level === 'aprendiz') {
    questions.push(
      {
        question: `Qual √© o principal objetivo do m√≥dulo "${module.title}"?`,
        options: [
          'Aprender conceitos b√°sicos de m√∫sica',
          'Dominar t√©cnicas avan√ßadas',
          'Criar composi√ß√µes complexas',
          'Tocar instrumentos virtuais'
        ],
        correctAnswer: 0,
        explanation: 'Este m√≥dulo foca nos conceitos fundamentais da m√∫sica.',
        difficulty: 'facil'
      },
      {
        question: `Para qual n√≠vel este m√≥dulo √© indicado?`,
        options: ['Aprendiz', 'Virtuoso', 'Maestro', 'Todos os n√≠veis'],
        correctAnswer: 0,
        explanation: 'Este m√≥dulo √© espec√≠fico para o n√≠vel Aprendiz.',
        difficulty: 'facil'
      },
      {
        question: `Quantos pontos voc√™ ganha completando este m√≥dulo?`,
        options: ['25 pontos', '50 pontos', '75 pontos', '100 pontos'],
        correctAnswer: 1,
        explanation: `Este m√≥dulo vale ${module.points} pontos.`,
        difficulty: 'facil'
      },
      {
        question: `Qual categoria musical este m√≥dulo aborda?`,
        options: [
          module.category.replace('-', ' ').replace(/\b\w/g, l => l.toUpperCase()),
          'Harmonia avan√ßada',
          'Composi√ß√£o cl√°ssica',
          'Improvisa√ß√£o jazz'
        ],
        correctAnswer: 0,
        explanation: `Este m√≥dulo pertence √† categoria ${module.category}.`,
        difficulty: 'medio'
      },
      {
        question: `Qual √© a dura√ß√£o estimada deste m√≥dulo?`,
        options: [
          `${module.duration} minutos`,
          '1 hora',
          '2 horas',
          '30 minutos'
        ],
        correctAnswer: 0,
        explanation: `Este m√≥dulo tem dura√ß√£o estimada de ${module.duration} minutos.`,
        difficulty: 'facil'
      },
      {
        question: `Este m√≥dulo √© adequado para iniciantes em m√∫sica?`,
        options: ['Sim, √© b√°sico', 'N√£o, √© avan√ßado', 'Depende do instrumento', 'Apenas para teoria'],
        correctAnswer: 0,
        explanation: 'Como √© um m√≥dulo de n√≠vel Aprendiz, √© adequado para iniciantes.',
        difficulty: 'facil'
      },
      {
        question: `Qual habilidade voc√™ desenvolver√° neste m√≥dulo?`,
        options: [
          'Fundamentos musicais',
          'T√©cnicas virtuos√≠sticas',
          'Composi√ß√£o orquestral',
          'Improvisa√ß√£o complexa'
        ],
        correctAnswer: 0,
        explanation: 'Este m√≥dulo desenvolve os fundamentos b√°sicos da m√∫sica.',
        difficulty: 'medio'
      }
    );
  } else if (module.level === 'virtuoso') {
    questions.push(
      {
        question: `Qual √© o n√≠vel de complexidade do m√≥dulo "${module.title}"?`,
        options: ['B√°sico', 'Intermedi√°rio', 'Avan√ßado', 'Profissional'],
        correctAnswer: 1,
        explanation: 'Este m√≥dulo √© de n√≠vel intermedi√°rio (Virtuoso).',
        difficulty: 'medio'
      },
      {
        question: `Para qual n√≠vel este m√≥dulo √© indicado?`,
        options: ['Aprendiz', 'Virtuoso', 'Maestro', 'Todos os n√≠veis'],
        correctAnswer: 1,
        explanation: 'Este m√≥dulo √© espec√≠fico para o n√≠vel Virtuoso.',
        difficulty: 'facil'
      },
      {
        question: `Quantos pontos voc√™ ganha completando este m√≥dulo?`,
        options: ['50 pontos', '75 pontos', '100 pontos', '125 pontos'],
        correctAnswer: 1,
        explanation: `Este m√≥dulo vale ${module.points} pontos.`,
        difficulty: 'facil'
      },
      {
        question: `Este m√≥dulo requer conhecimento pr√©vio?`,
        options: ['Sim, conceitos b√°sicos', 'N√£o, √© independente', 'Apenas teoria', 'S√≥ pr√°tica'],
        correctAnswer: 0,
        explanation: 'M√≥dulos Virtuoso requerem conhecimento dos conceitos b√°sicos.',
        difficulty: 'medio'
      },
      {
        question: `Qual √© a dura√ß√£o estimada deste m√≥dulo?`,
        options: [
          `${module.duration} minutos`,
          '1 hora',
          '2 horas',
          '30 minutos'
        ],
        correctAnswer: 0,
        explanation: `Este m√≥dulo tem dura√ß√£o estimada de ${module.duration} minutos.`,
        difficulty: 'facil'
      },
      {
        question: `Este m√≥dulo desenvolve habilidades espec√≠ficas?`,
        options: ['Sim, t√©cnicas intermedi√°rias', 'N√£o, √© geral', 'Apenas te√≥ricas', 'S√≥ pr√°ticas'],
        correctAnswer: 0,
        explanation: 'M√≥dulos Virtuoso desenvolvem t√©cnicas e conceitos intermedi√°rios.',
        difficulty: 'medio'
      },
      {
        question: `Qual categoria musical este m√≥dulo aborda?`,
        options: [
          module.category.replace('-', ' ').replace(/\b\w/g, l => l.toUpperCase()),
          'Fundamentos b√°sicos',
          'Composi√ß√£o avan√ßada',
          'Improvisa√ß√£o livre'
        ],
        correctAnswer: 0,
        explanation: `Este m√≥dulo pertence √† categoria ${module.category}.`,
        difficulty: 'medio'
      }
    );
  } else if (module.level === 'maestro') {
    questions.push(
      {
        question: `Qual √© o n√≠vel de complexidade do m√≥dulo "${module.title}"?`,
        options: ['B√°sico', 'Intermedi√°rio', 'Avan√ßado', 'Profissional'],
        correctAnswer: 2,
        explanation: 'Este m√≥dulo √© de n√≠vel avan√ßado (Maestro).',
        difficulty: 'dificil'
      },
      {
        question: `Para qual n√≠vel este m√≥dulo √© indicado?`,
        options: ['Aprendiz', 'Virtuoso', 'Maestro', 'Todos os n√≠veis'],
        correctAnswer: 2,
        explanation: 'Este m√≥dulo √© espec√≠fico para o n√≠vel Maestro.',
        difficulty: 'facil'
      },
      {
        question: `Quantos pontos voc√™ ganha completando este m√≥dulo?`,
        options: ['75 pontos', '100 pontos', '125 pontos', '150 pontos'],
        correctAnswer: 1,
        explanation: `Este m√≥dulo vale ${module.points} pontos.`,
        difficulty: 'facil'
      },
      {
        question: `Este m√≥dulo requer conhecimento avan√ßado?`,
        options: ['Sim, conceitos complexos', 'N√£o, √© b√°sico', 'Apenas teoria', 'S√≥ pr√°tica'],
        correctAnswer: 0,
        explanation: 'M√≥dulos Maestro requerem conhecimento avan√ßado de m√∫sica.',
        difficulty: 'medio'
      },
      {
        question: `Qual √© a dura√ß√£o estimada deste m√≥dulo?`,
        options: [
          `${module.duration} minutos`,
          '1 hora',
          '2 horas',
          '30 minutos'
        ],
        correctAnswer: 0,
        explanation: `Este m√≥dulo tem dura√ß√£o estimada de ${module.duration} minutos.`,
        difficulty: 'facil'
      },
      {
        question: `Este m√≥dulo desenvolve habilidades profissionais?`,
        options: ['Sim, t√©cnicas avan√ßadas', 'N√£o, √© b√°sico', 'Apenas te√≥ricas', 'S√≥ pr√°ticas'],
        correctAnswer: 0,
        explanation: 'M√≥dulos Maestro desenvolvem habilidades profissionais avan√ßadas.',
        difficulty: 'dificil'
      },
      {
        question: `Qual categoria musical este m√≥dulo aborda?`,
        options: [
          module.category.replace('-', ' ').replace(/\b\w/g, l => l.toUpperCase()),
          'Fundamentos b√°sicos',
          'T√©cnicas intermedi√°rias',
          'Improvisa√ß√£o livre'
        ],
        correctAnswer: 0,
        explanation: `Este m√≥dulo pertence √† categoria ${module.category}.`,
        difficulty: 'medio'
      }
    );
  }
  
  return questions;
};

// Fun√ß√£o principal
const reorganizeAndExpandContent = async () => {
  try {
    console.log('üöÄ REORGANIZANDO E EXPANDINDO CONTE√öDO');
    console.log('=' .repeat(60));

    // 1. Limpar dados existentes
    await clearExistingData();

    // 2. Criar m√≥dulos expandidos
    const modules = await createExpandedModules();

    // 3. Criar quizzes expandidos
    const quizzes = await createExpandedQuizzes(modules);

    // 4. Verificar resultado
    console.log('\nüìä RESULTADO FINAL:');
    console.log('-' .repeat(40));
    
    const totalModules = await Module.countDocuments();
    const totalQuizzes = await Quiz.countDocuments();
    const totalQuestions = await Quiz.aggregate([
      { $project: { questionCount: { $size: "$questions" } } },
      { $group: { _id: null, total: { $sum: "$questionCount" } } }
    ]);

    console.log(`üìö Total de m√≥dulos: ${totalModules}`);
    console.log(`üéØ Total de quizzes: ${totalQuizzes}`);
    console.log(`‚ùì Total de perguntas: ${totalQuestions[0]?.total || 0}`);

    // Distribui√ß√£o por n√≠vel
    const levelStats = await Module.aggregate([
      { $group: { _id: "$level", count: { $sum: 1 } } },
      { $sort: { _id: 1 } }
    ]);

    console.log('\nüìà DISTRIBUI√á√ÉO POR N√çVEL:');
    levelStats.forEach(stat => {
      console.log(`   üéØ ${stat._id.toUpperCase()}: ${stat.count} m√≥dulos`);
    });

    // Perguntas por n√≠vel
    const questionsByLevel = await Quiz.aggregate([
      { $project: { level: 1, questionCount: { $size: "$questions" } } },
      { $group: { _id: "$level", total: { $sum: "$questionCount" } } },
      { $sort: { _id: 1 } }
    ]);

    console.log('\n‚ùì PERGUNTAS POR N√çVEL:');
    questionsByLevel.forEach(stat => {
      console.log(`   üéØ ${stat._id.toUpperCase()}: ${stat.total} perguntas`);
    });

    console.log('\nüéâ REORGANIZA√á√ÉO CONCLU√çDA COM SUCESSO!');
    console.log('=' .repeat(60));

  } catch (error) {
    console.error('‚ùå Erro durante a reorganiza√ß√£o:', error);
  } finally {
    await mongoose.disconnect();
    console.log('\nüîå Desconectado do MongoDB');
    process.exit(0);
  }
};

// Executar se chamado diretamente
if (require.main === module) {
  connectDB().then(reorganizeAndExpandContent);
}

module.exports = { reorganizeAndExpandContent };
