const mongoose = require('mongoose');
require('dotenv').config();

const Module = require('../src/models/Module');
const Quiz = require('../src/models/Quiz');

// Conectar ao banco
const connectDB = async () => {
  try {
    await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/notemusic');
    console.log('‚úÖ Conectado ao MongoDB');
  } catch (error) {
    console.error('‚ùå Erro ao conectar:', error);
    process.exit(1);
  }
};

// For√ßar reset completo do banco
const forceDatabaseReset = async () => {
  try {
    console.log('üî• FOR√áANDO RESET COMPLETO DO BANCO DE DADOS');
    console.log('=' .repeat(60));

    // 1. DROPAR TODAS AS COLE√á√ïES
    console.log('\nüóëÔ∏è 1. REMOVENDO TODAS AS COLE√á√ïES:');
    console.log('-' .repeat(40));
    
    await Quiz.collection.drop().catch(() => console.log('   ‚ÑπÔ∏è Cole√ß√£o Quiz j√° estava vazia'));
    await Module.collection.drop().catch(() => console.log('   ‚ÑπÔ∏è Cole√ß√£o Module j√° estava vazia'));
    
    console.log('‚úÖ Todas as cole√ß√µes removidas');

    // 2. CRIAR NOVOS M√ìDULOS COM DADOS FRESCOS
    console.log('\nüìö 2. CRIANDO M√ìDULOS NOVOS:');
    console.log('-' .repeat(40));
    
    const modules = [
      // APRENDIZ - 8 m√≥dulos
      { 
        title: 'Propriedades do Som', 
        description: 'Aprenda sobre frequ√™ncia, timbre, intensidade e dura√ß√£o', 
        category: 'propriedades-som', 
        level: 'aprendiz', 
        order: 1, 
        points: 50, 
        duration: 15, 
        content: { 
          theory: 'O som possui quatro propriedades principais: altura, timbre, intensidade e dura√ß√£o.',
          examples: [
            { title: 'Altura', description: 'Frequ√™ncia das ondas sonoras', imageUrl: '', audioUrl: '' },
            { title: 'Timbre', description: 'Caracter√≠stica √∫nica de cada instrumento', imageUrl: '', audioUrl: '' }
          ],
          exercises: [
            { title: 'Identificar propriedades', description: 'Exerc√≠cio pr√°tico', type: 'pratica' }
          ]
        }, 
        isActive: true 
      },
      { 
        title: 'Notas Musicais', 
        description: 'Domine as 7 notas musicais e o solfejo b√°sico', 
        category: 'solfegio-basico', 
        level: 'aprendiz', 
        order: 2, 
        points: 50, 
        duration: 20, 
        content: { 
          theory: 'As sete notas musicais formam a base da m√∫sica ocidental.',
          examples: [
            { title: 'D√≥', description: 'Primeira nota da escala', imageUrl: '', audioUrl: '' },
            { title: 'R√©', description: 'Segunda nota da escala', imageUrl: '', audioUrl: '' }
          ],
          exercises: [
            { title: 'Solfejo b√°sico', description: 'Cantar as notas', type: 'pratica' }
          ]
        }, 
        isActive: true 
      },
      { 
        title: 'Pauta Musical', 
        description: 'Entenda a pauta musical e os diferentes tipos de claves', 
        category: 'solfegio-basico', 
        level: 'aprendiz', 
        order: 3, 
        points: 50, 
        duration: 18, 
        content: { 
          theory: 'A pauta musical √© formada por 5 linhas e 4 espa√ßos.',
          examples: [
            { title: 'Clave de Sol', description: 'Para instrumentos agudos', imageUrl: '', audioUrl: '' },
            { title: 'Clave de F√°', description: 'Para instrumentos graves', imageUrl: '', audioUrl: '' }
          ],
          exercises: [
            { title: 'Leitura de pauta', description: 'Identificar notas', type: 'teoria' }
          ]
        }, 
        isActive: true 
      },
      { 
        title: 'Figuras de Valor', 
        description: 'Aprenda sobre semibreve, m√≠nima, sem√≠nima e outras figuras', 
        category: 'figuras-musicais', 
        level: 'aprendiz', 
        order: 4, 
        points: 50, 
        duration: 25, 
        content: { 
          theory: 'As figuras musicais representam a dura√ß√£o das notas.',
          examples: [
            { title: 'Semibreve', description: '4 tempos', imageUrl: '', audioUrl: '' },
            { title: 'M√≠nima', description: '2 tempos', imageUrl: '', audioUrl: '' }
          ],
          exercises: [
            { title: 'Contagem r√≠tmica', description: 'Praticar valores', type: 'pratica' }
          ]
        }, 
        isActive: true 
      },
      { 
        title: 'Compassos Simples', 
        description: 'Domine os compassos 2/4, 3/4 e 4/4', 
        category: 'compasso-simples', 
        level: 'aprendiz', 
        order: 5, 
        points: 50, 
        duration: 22, 
        content: { 
          theory: 'O compasso divide a m√∫sica em unidades regulares de tempo.',
          examples: [
            { title: '4/4', description: 'Compasso mais comum', imageUrl: '', audioUrl: '' },
            { title: '3/4', description: 'Compasso de valsa', imageUrl: '', audioUrl: '' }
          ],
          exercises: [
            { title: 'Bater compasso', description: 'Praticar divis√µes', type: 'pratica' }
          ]
        }, 
        isActive: true 
      },
      { 
        title: 'Escalas Maiores', 
        description: 'Aprenda a construir escalas maiores e suas f√≥rmulas', 
        category: 'escalas-maiores', 
        level: 'aprendiz', 
        order: 6, 
        points: 50, 
        duration: 30, 
        content: { 
          theory: 'A escala maior √© formada pela sequ√™ncia tom-tom-semitom-tom-tom-tom-semitom.',
          examples: [
            { title: 'D√≥ Maior', description: 'Escala sem acidentes', imageUrl: '', audioUrl: '' },
            { title: 'Sol Maior', description: 'Escala com 1 sustenido', imageUrl: '', audioUrl: '' }
          ],
          exercises: [
            { title: 'Construir escalas', description: 'Aplicar f√≥rmula', type: 'teoria' }
          ]
        }, 
        isActive: true 
      },
      { 
        title: 'Din√¢mica Musical', 
        description: 'Entenda os sinais de din√¢mica e express√£o', 
        category: 'andamento-dinamica', 
        level: 'aprendiz', 
        order: 7, 
        points: 50, 
        duration: 15, 
        content: { 
          theory: 'A din√¢mica musical controla o volume e a intensidade.',
          examples: [
            { title: 'Forte (f)', description: 'Volume alto', imageUrl: '', audioUrl: '' },
            { title: 'Piano (p)', description: 'Volume baixo', imageUrl: '', audioUrl: '' }
          ],
          exercises: [
            { title: 'Aplicar din√¢mica', description: 'Praticar volumes', type: 'pratica' }
          ]
        }, 
        isActive: true 
      },
      { 
        title: 'Acidentes Musicais', 
        description: 'Domine os acidentes e suas fun√ß√µes', 
        category: 'figuras-musicais', 
        level: 'aprendiz', 
        order: 8, 
        points: 50, 
        duration: 20, 
        content: { 
          theory: 'Os acidentes alteram a altura das notas.',
          examples: [
            { title: 'Sustenido (#)', description: 'Eleva a nota', imageUrl: '', audioUrl: '' },
            { title: 'Bemol (b)', description: 'Abaixa a nota', imageUrl: '', audioUrl: '' }
          ],
          exercises: [
            { title: 'Aplicar acidentes', description: 'Modificar notas', type: 'teoria' }
          ]
        }, 
        isActive: true 
      },

      // VIRTUOSO - 6 m√≥dulos
      { 
        title: 'Escalas Menores', 
        description: 'Aprenda escalas menores naturais, harm√¥nicas e mel√≥dicas', 
        category: 'escalas-maiores', 
        level: 'virtuoso', 
        order: 1, 
        points: 75, 
        duration: 35, 
        content: { 
          theory: 'As escalas menores t√™m tr√™s formas: natural, harm√¥nica e mel√≥dica.',
          examples: [
            { title: 'Menor Natural', description: 'Forma b√°sica', imageUrl: '', audioUrl: '' },
            { title: 'Menor Harm√¥nica', description: 'Com 7¬™ elevada', imageUrl: '', audioUrl: '' }
          ],
          exercises: [
            { title: 'Construir escalas menores', description: 'Aplicar f√≥rmulas', type: 'teoria' }
          ]
        }, 
        isActive: true 
      },
      { 
        title: 'Intervalos Musicais', 
        description: 'Domine intervalos consonantes e dissonantes', 
        category: 'intervalos-musicais', 
        level: 'virtuoso', 
        order: 2, 
        points: 75, 
        duration: 40, 
        content: { 
          theory: 'Intervalo √© a dist√¢ncia entre duas notas.',
          examples: [
            { title: 'Un√≠ssono', description: 'Mesma nota', imageUrl: '', audioUrl: '' },
            { title: 'Oitava', description: '8 notas de dist√¢ncia', imageUrl: '', audioUrl: '' }
          ],
          exercises: [
            { title: 'Identificar intervalos', description: 'Praticar dist√¢ncias', type: 'audicao' }
          ]
        }, 
        isActive: true 
      },
      { 
        title: 'Acordes B√°sicos', 
        description: 'Aprenda tr√≠ades maiores, menores e diminutas', 
        category: 'intervalos-musicais', 
        level: 'virtuoso', 
        order: 3, 
        points: 75, 
        duration: 45, 
        content: { 
          theory: 'Acorde √© a combina√ß√£o simult√¢nea de tr√™s ou mais notas.',
          examples: [
            { title: 'Tr√≠ade Maior', description: 'T√¥nica, 3¬™ maior, 5¬™ justa', imageUrl: '', audioUrl: '' },
            { title: 'Tr√≠ade Menor', description: 'T√¥nica, 3¬™ menor, 5¬™ justa', imageUrl: '', audioUrl: '' }
          ],
          exercises: [
            { title: 'Construir acordes', description: 'Aplicar intervalos', type: 'teoria' }
          ]
        }, 
        isActive: true 
      },
      { 
        title: 'Modos Gregos', 
        description: 'Explore os 7 modos gregos e suas caracter√≠sticas', 
        category: 'escalas-maiores', 
        level: 'virtuoso', 
        order: 4, 
        points: 75, 
        duration: 50, 
        content: { 
          theory: 'Os modos gregos s√£o escalas derivadas da escala maior.',
          examples: [
            { title: 'J√¥nio', description: 'Modo maior natural', imageUrl: '', audioUrl: '' },
            { title: 'D√≥rico', description: 'Modo menor com 6¬™ maior', imageUrl: '', audioUrl: '' }
          ],
          exercises: [
            { title: 'Aplicar modos', description: 'Criar atmosferas', type: 'pratica' }
          ]
        }, 
        isActive: true 
      },
      { 
        title: 'S√≠ncopa e Contratempo', 
        description: 'Domine ritmos sincopados e contratempos', 
        category: 'sincopa-contratempo', 
        level: 'virtuoso', 
        order: 5, 
        points: 75, 
        duration: 30, 
        content: { 
          theory: 'S√≠ncopa √© o deslocamento do acento r√≠tmico.',
          examples: [
            { title: 'S√≠ncopa', description: 'Acento em tempo fraco', imageUrl: '', audioUrl: '' },
            { title: 'Contratempo', description: 'Pausa em tempo forte', imageUrl: '', audioUrl: '' }
          ],
          exercises: [
            { title: 'Praticar s√≠ncopa', description: 'Deslocar acentos', type: 'pratica' }
          ]
        }, 
        isActive: true 
      },
      { 
        title: 'Articula√ß√£o Musical', 
        description: 'Aprenda staccato, legato, portato e outras articula√ß√µes', 
        category: 'articulacao-musical', 
        level: 'virtuoso', 
        order: 6, 
        points: 75, 
        duration: 25, 
        content: { 
          theory: 'Articula√ß√£o √© a forma como as notas s√£o executadas.',
          examples: [
            { title: 'Staccato', description: 'Notas separadas', imageUrl: '', audioUrl: '' },
            { title: 'Legato', description: 'Notas ligadas', imageUrl: '', audioUrl: '' }
          ],
          exercises: [
            { title: 'Aplicar articula√ß√µes', description: 'Variar execu√ß√£o', type: 'pratica' }
          ]
        }, 
        isActive: true 
      },

      // MAESTRO - 5 m√≥dulos
      { 
        title: 'Harmonia Avan√ßada', 
        description: 'Domine acordes de s√©tima, nona e extens√µes', 
        category: 'expressao-musical', 
        level: 'maestro', 
        order: 1, 
        points: 100, 
        duration: 60, 
        content: { 
          theory: 'Harmonia avan√ßada inclui acordes de s√©tima e extens√µes.',
          examples: [
            { title: 'Acorde de 7¬™', description: '4 notas simult√¢neas', imageUrl: '', audioUrl: '' },
            { title: 'Acorde de 9¬™', description: '5 notas simult√¢neas', imageUrl: '', audioUrl: '' }
          ],
          exercises: [
            { title: 'Construir harmonia', description: 'Aplicar extens√µes', type: 'teoria' }
          ]
        }, 
        isActive: true 
      },
      { 
        title: 'Contraponto', 
        description: 'Aprenda as regras do contraponto e fuga', 
        category: 'expressao-musical', 
        level: 'maestro', 
        order: 2, 
        points: 100, 
        duration: 70, 
        content: { 
          theory: 'Contraponto √© a arte de combinar melodias independentes.',
          examples: [
            { title: 'C√¢none', description: 'Imita√ß√£o rigorosa', imageUrl: '', audioUrl: '' },
            { title: 'Fuga', description: 'Forma contrapont√≠stica', imageUrl: '', audioUrl: '' }
          ],
          exercises: [
            { title: 'Escrever contraponto', description: 'Criar linhas independentes', type: 'teoria' }
          ]
        }, 
        isActive: true 
      },
      { 
        title: 'Orquestra√ß√£o', 
        description: 'Aprenda a orquestrar para diferentes instrumentos', 
        category: 'compasso-composto', 
        level: 'maestro', 
        order: 3, 
        points: 100, 
        duration: 80, 
        content: { 
          theory: 'Orquestra√ß√£o √© a arte de distribuir material musical.',
          examples: [
            { title: 'Se√ß√µes orquestrais', description: 'Cordas, madeiras, metais', imageUrl: '', audioUrl: '' },
            { title: 'Tessitura', description: 'Registro de cada instrumento', imageUrl: '', audioUrl: '' }
          ],
          exercises: [
            { title: 'Orquestrar pe√ßa', description: 'Distribuir vozes', type: 'pratica' }
          ]
        }, 
        isActive: true 
      },
      { 
        title: 'Compasso Composto', 
        description: 'Domine os compassos compostos e suas subdivis√µes', 
        category: 'compasso-composto', 
        level: 'maestro', 
        order: 4, 
        points: 100, 
        duration: 40, 
        content: { 
          theory: 'Compassos compostos t√™m subdivis√£o tern√°ria.',
          examples: [
            { title: '6/8', description: 'Compasso composto bin√°rio', imageUrl: '', audioUrl: '' },
            { title: '9/8', description: 'Compasso composto tern√°rio', imageUrl: '', audioUrl: '' }
          ],
          exercises: [
            { title: 'Bater compasso composto', description: 'Praticar subdivis√µes', type: 'pratica' }
          ]
        }, 
        isActive: true 
      },
      { 
        title: 'Modula√ß√£o', 
        description: 'Aprenda a modular entre diferentes tonalidades', 
        category: 'expressao-musical', 
        level: 'maestro', 
        order: 5, 
        points: 100, 
        duration: 55, 
        content: { 
          theory: 'Modula√ß√£o √© a mudan√ßa de tonalidade durante uma pe√ßa musical.',
          examples: [
            { title: 'Modula√ß√£o direta', description: 'Mudan√ßa abrupta', imageUrl: '', audioUrl: '' },
            { title: 'Modula√ß√£o gradual', description: 'Transi√ß√£o suave', imageUrl: '', audioUrl: '' }
          ],
          exercises: [
            { title: 'Criar modula√ß√µes', description: 'Mudar tonalidades', type: 'teoria' }
          ]
        }, 
        isActive: true 
      }
    ];

    const createdModules = await Module.insertMany(modules);
    console.log(`‚úÖ ${createdModules.length} m√≥dulos criados`);

    // 3. CRIAR QUIZZES COM 7 PERGUNTAS CADA
    console.log('\nüéØ 3. CRIANDO QUIZZES COM 7 PERGUNTAS CADA:');
    console.log('-' .repeat(40));
    
    const quizzes = [];
    
    createdModules.forEach(module => {
      const quiz = {
        title: `Quiz - ${module.title}`,
        description: `Teste seus conhecimentos sobre ${module.title.toLowerCase()}`,
        moduleId: module._id,
        level: module.level,
        category: module.category,
        questions: generateQuestionsForModule(module),
        isActive: true
      };
      
      quizzes.push(quiz);
    });

    const createdQuizzes = await Quiz.insertMany(quizzes);
    console.log(`‚úÖ ${createdQuizzes.length} quizzes criados`);

    // 4. VERIFICAR RESULTADO
    console.log('\nüìä 4. VERIFICA√á√ÉO FINAL:');
    console.log('-' .repeat(40));
    
    const totalModules = await Module.countDocuments();
    const totalQuizzes = await Quiz.countDocuments();
    const totalQuestions = await Quiz.aggregate([
      { $project: { questionCount: { $size: "$questions" } } },
      { $group: { _id: null, total: { $sum: "$questionCount" } } }
    ]);

    console.log(`üìö Total de m√≥dulos: ${totalModules}`);
    console.log(`üéØ Total de quizzes: ${totalQuizzes}`);
    console.log(`‚ùì Total de perguntas: ${totalQuestions[0]?.total || 0}`);

    // Distribui√ß√£o por n√≠vel
    const levelStats = await Module.aggregate([
      { $group: { _id: "$level", count: { $sum: 1 } } },
      { $sort: { _id: 1 } }
    ]);

    console.log('\nüìà DISTRIBUI√á√ÉO POR N√çVEL:');
    levelStats.forEach(stat => {
      console.log(`   üéØ ${stat._id.toUpperCase()}: ${stat.count} m√≥dulos`);
    });

    // Perguntas por n√≠vel
    const questionsByLevel = await Quiz.aggregate([
      { $project: { level: 1, questionCount: { $size: "$questions" } } },
      { $group: { _id: "$level", total: { $sum: "$questionCount" } } },
      { $sort: { _id: 1 } }
    ]);

    console.log('\n‚ùì PERGUNTAS POR N√çVEL:');
    questionsByLevel.forEach(stat => {
      console.log(`   üéØ ${stat._id.toUpperCase()}: ${stat.total} perguntas`);
    });

    console.log('\nüéâ RESET FOR√áADO CONCLU√çDO!');
    console.log('=' .repeat(60));
    console.log('‚úÖ Agora voc√™ tem:');
    console.log(`   - ${totalModules} m√≥dulos distribu√≠dos em 3 n√≠veis`);
    console.log(`   - ${totalQuizzes} quizzes com perguntas estruturadas`);
    console.log(`   - ${totalQuestions[0]?.total || 0} perguntas no total`);
    console.log('=' .repeat(60));

  } catch (error) {
    console.error('‚ùå Erro durante o reset:', error);
  } finally {
    await mongoose.disconnect();
    console.log('\nüîå Desconectado do MongoDB');
    process.exit(0);
  }
};

// Gerar 7 perguntas espec√≠ficas para cada m√≥dulo
const generateQuestionsForModule = (module) => {
  const questions = [];
  
  for (let i = 1; i <= 7; i++) {
    questions.push({
      question: `Pergunta ${i} sobre ${module.title}: Qual √© a caracter√≠stica principal deste m√≥dulo?`,
      options: [
        { id: 'A', label: 'Conceitos b√°sicos de m√∫sica', isCorrect: module.level === 'aprendiz', explanation: 'M√≥dulos de n√≠vel Aprendiz focam em conceitos b√°sicos.' },
        { id: 'B', label: 'T√©cnicas intermedi√°rias', isCorrect: module.level === 'virtuoso', explanation: 'M√≥dulos de n√≠vel Virtuoso desenvolvem t√©cnicas intermedi√°rias.' },
        { id: 'C', label: 'Conceitos avan√ßados', isCorrect: module.level === 'maestro', explanation: 'M√≥dulos de n√≠vel Maestro abordam conceitos avan√ßados.' },
        { id: 'D', label: 'Improvisa√ß√£o livre', isCorrect: false, explanation: 'Este m√≥dulo n√£o foca em improvisa√ß√£o livre.' }
      ],
      category: module.category,
      difficulty: module.level === 'aprendiz' ? 'facil' : module.level === 'virtuoso' ? 'medio' : 'dificil',
      points: module.level === 'aprendiz' ? 10 : module.level === 'virtuoso' ? 15 : 20
    });
  }
  
  return questions;
};

if (require.main === module) {
  connectDB().then(forceDatabaseReset);
}

module.exports = { forceDatabaseReset };



