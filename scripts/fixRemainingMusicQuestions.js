const mongoose = require('mongoose');
require('dotenv').config();

const Quiz = require('../src/models/Quiz');

// Conectar ao banco
const connectDB = async () => {
  try {
    await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/notemusic');
    console.log('‚úÖ Conectado ao MongoDB');
  } catch (error) {
    console.error('‚ùå Erro ao conectar:', error);
    process.exit(1);
  }
};

// Corrigir as perguntas restantes de teoria musical
const fixRemainingMusicQuestions = async () => {
  try {
    console.log('üîß Corrigindo perguntas restantes de teoria musical...');
    
    // Corrigir pergunta sobre a figura musical de maior dura√ß√£o
    await fixSemibreveQuestion();
    
    // Atualizar todas as explica√ß√µes para garantir que sejam detalhadas
    await updateAllExplanations();
    
    console.log('‚úÖ Corre√ß√µes conclu√≠das!');
  } catch (error) {
    console.error('‚ùå Erro ao corrigir perguntas restantes:', error);
  }
};

// Corrigir a pergunta sobre a semibreve
const fixSemibreveQuestion = async () => {
  try {
    console.log('\nüîç Procurando pergunta sobre figura musical de maior dura√ß√£o...');
    
    // Buscar quizzes de figuras musicais ou propriedades do som
    const quizzes = await Quiz.find({ 
      title: { $regex: /propriedades|figura|musical/i }
    });
    
    if (quizzes.length === 0) {
      console.log('‚ùå Nenhum quiz relacionado encontrado');
      return;
    }
    
    console.log(`üìä Encontrados ${quizzes.length} quizzes potenciais`);
    
    // Para cada quiz
    for (const quiz of quizzes) {
      console.log(`\nüéµ Analisando quiz: ${quiz.title}`);
      
      // Procurar a pergunta sobre figura musical de maior dura√ß√£o
      const figuraQuestionIndex = quiz.questions.findIndex(q => 
        q.question.toLowerCase().includes('figura musical') && 
        q.question.toLowerCase().includes('maior dura√ß√£o')
      );
      
      if (figuraQuestionIndex === -1) {
        console.log('‚ùå Pergunta sobre figura musical de maior dura√ß√£o n√£o encontrada neste quiz');
        continue;
      }
      
      const question = quiz.questions[figuraQuestionIndex];
      console.log(`‚úÖ Pergunta encontrada: "${question.question}"`);
      
      // Verificar as op√ß√µes
      console.log('üìã Op√ß√µes atuais:');
      question.options.forEach((opt, i) => {
        console.log(`   ${i+1}. ${opt.label} (${opt.isCorrect ? '‚úì' : '‚úó'})`);
      });
      
      // Procurar a op√ß√£o "semibreve"
      const semibreveIndex = question.options.findIndex(opt => 
        opt.label.toLowerCase().includes('semibreve')
      );
      
      if (semibreveIndex === -1) {
        console.log('‚ùå Op√ß√£o "semibreve" n√£o encontrada');
        continue;
      }
      
      // Verificar se a op√ß√£o "semibreve" j√° est√° marcada como correta
      if (question.options[semibreveIndex].isCorrect) {
        console.log('‚úÖ Op√ß√£o "semibreve" j√° est√° correta');
      } else {
        console.log('üîß Marcando op√ß√£o "semibreve" como correta');
        
        // Marcar "semibreve" como correta
        quiz.questions[figuraQuestionIndex].options[semibreveIndex].isCorrect = true;
        
        // Marcar as outras como incorretas
        for (let i = 0; i < question.options.length; i++) {
          if (i !== semibreveIndex) {
            quiz.questions[figuraQuestionIndex].options[i].isCorrect = false;
          }
        }
        
        await quiz.save();
        console.log('‚úÖ Op√ß√£o "semibreve" marcada como correta');
      }
      
      // Atualizar a explica√ß√£o
      quiz.questions[figuraQuestionIndex].explanation = 
        "A semibreve (whole note) √© a figura musical de maior dura√ß√£o no sistema moderno de nota√ß√£o musical, valendo 4 tempos em um compasso quatern√°rio (4/4). As demais figuras s√£o subdivis√µes dela: m√≠nima (2 tempos), sem√≠nima (1 tempo), colcheia (1/2 tempo), semicolcheia (1/4 tempo), fusa (1/8 tempo) e semifusa (1/16 tempo).";
      
      await quiz.save();
      console.log('‚úÖ Explica√ß√£o atualizada');
    }
    
  } catch (error) {
    console.error('‚ùå Erro ao corrigir pergunta sobre semibreve:', error);
  }
};

// Atualizar todas as explica√ß√µes para garantir que sejam detalhadas
const updateAllExplanations = async () => {
  try {
    console.log('\nüîç Atualizando todas as explica√ß√µes...');
    
    // Definir explica√ß√µes detalhadas para perguntas comuns
    const detailedExplanations = {
      // Propriedades do Som
      "Qual propriedade do som determina se uma nota √© grave ou aguda?": 
        "A altura (pitch) √© a propriedade ac√∫stica relacionada √† frequ√™ncia das ondas sonoras. Quanto maior a frequ√™ncia, mais agudo √© o som; quanto menor, mais grave. √â medida em Hertz (Hz). Por exemplo, a nota L√° 440Hz √© o padr√£o de afina√ß√£o para orquestras.",
      
      "O que diferencia o som de um violino e um piano tocando a mesma nota?": 
        "O timbre √© a qualidade sonora que permite distinguir sons da mesma altura e intensidade produzidos por fontes diferentes. √â determinado pelos harm√¥nicos (frequ√™ncias secund√°rias) que acompanham a frequ√™ncia fundamental. Cada instrumento possui um envelope sonoro √∫nico com ataque, sustenta√ß√£o e decaimento caracter√≠sticos.",
      
      "Qual s√≠mbolo musical indica que uma nota deve ser tocada com pouca intensidade?": 
        "Na nota√ß√£o musical, 'p' (piano) indica que o som deve ser executado com baixa intensidade. A escala completa de din√¢micas vai de ppp (pianississimo - extremamente suave) a fff (fortississimo - extremamente forte). Estas indica√ß√µes italianas s√£o universalmente utilizadas na m√∫sica ocidental desde o per√≠odo barroco.",
      
      "O que significa o s√≠mbolo de crescendo (<) na partitura?": 
        "O crescendo (<) √© uma indica√ß√£o de din√¢mica que orienta o m√∫sico a aumentar gradualmente a intensidade do som durante o trecho marcado. Seu oposto √© o diminuendo ou decrescendo (>), que indica redu√ß√£o gradual da intensidade. Estas indica√ß√µes s√£o essenciais para a expressividade musical, permitindo nuances na interpreta√ß√£o.",
      
      // Nota√ß√£o Musical
      "Quantas linhas possui um pentagrama padr√£o?": 
        "O pentagrama (staff) padr√£o consiste em exatamente 5 linhas horizontais equidistantes e 4 espa√ßos entre elas. √â neste sistema que as notas musicais s√£o escritas, tanto nas linhas quanto nos espa√ßos. Quando necess√°rio, podem ser adicionadas linhas suplementares acima ou abaixo do pentagrama para acomodar notas mais agudas ou graves.",
      
      "Quantos tempos vale uma m√≠nima?": 
        "A m√≠nima (half note) vale 2 tempos em um compasso simples. Representa metade da dura√ß√£o de uma semibreve (4 tempos) e o dobro de uma sem√≠nima (1 tempo). √â representada por uma nota com cabe√ßa branca e haste. Em compassos compostos, como 6/8, seu valor relativo se mant√©m, mas a unidade de tempo muda.",
      
      "O que indica a fra√ß√£o 4/4 no in√≠cio de uma partitura?": 
        "A fra√ß√£o 4/4 indica a f√≥rmula de compasso (time signature). O numerador (4) representa o n√∫mero de unidades de tempo por compasso, e o denominador (4) indica que a sem√≠nima √© a unidade de tempo. Tamb√©m conhecido como compasso quatern√°rio simples ou 'common time', pode ser representado pelo s√≠mbolo C. √â o compasso mais utilizado na m√∫sica ocidental.",
      
      // Intervalos Musicais
      "Qual √© o intervalo entre as notas D√≥ e Mi?": 
        "O intervalo entre D√≥ e Mi √© uma 3¬™ maior, abrangendo 2 tons (ou 4 semitons). Na teoria musical ocidental, a 3¬™ maior √© um dos intervalos fundamentais para a constru√ß√£o de acordes maiores. Este intervalo tem uma qualidade sonora brilhante e est√°vel, sendo a base da sonoridade dos acordes maiores que transmitem sensa√ß√µes de alegria ou resolu√ß√£o.",
      
      "Qual intervalo √© considerado 'conson√¢ncia perfeita'?": 
        "Na teoria tradicional, os intervalos de un√≠ssono, 4¬™ justa, 5¬™ justa e oitava s√£o considerados conson√¢ncias perfeitas. A 5¬™ justa (7 semitons) √© especialmente importante na m√∫sica ocidental, sendo a base do ciclo de quintas e da rela√ß√£o entre t√¥nica e dominante. As conson√¢ncias perfeitas t√™m uma estabilidade ac√∫stica devido √† propor√ß√£o simples entre as frequ√™ncias das notas.",
      
      "Quantos tons tem um intervalo de 3¬™ menor?": 
        "Um intervalo de 3¬™ menor cont√©m 1,5 tons (ou 3 semitons). Exemplos incluem L√°-D√≥, Mi-Sol e Si-R√©. A 3¬™ menor √© fundamental para a constru√ß√£o de acordes menores e para definir o modo menor. Este intervalo possui uma qualidade sonora mais melanc√≥lica ou introspectiva em compara√ß√£o com a 3¬™ maior, sendo essencial para expressar emo√ß√µes como tristeza ou nostalgia na m√∫sica."
    };
    
    // Buscar todos os quizzes
    const quizzes = await Quiz.find({});
    
    let questionsUpdated = 0;
    
    // Para cada quiz
    for (const quiz of quizzes) {
      console.log(`\nüéµ Atualizando explica√ß√µes no quiz: ${quiz.title}`);
      let quizModified = false;
      
      // Para cada quest√£o
      for (let i = 0; i < quiz.questions.length; i++) {
        const question = quiz.questions[i];
        
        // Verificar se a explica√ß√£o √© curta ou ausente
        if (!question.explanation || question.explanation.length < 30) {
          console.log(`üìù Quest√£o sem explica√ß√£o detalhada: "${question.question.substring(0, 40)}..."`);
          
          // Procurar uma explica√ß√£o detalhada para esta pergunta
          let foundExplanation = false;
          for (const [key, value] of Object.entries(detailedExplanations)) {
            if (question.question.toLowerCase().includes(key.toLowerCase()) || 
                key.toLowerCase().includes(question.question.toLowerCase())) {
              quiz.questions[i].explanation = value;
              foundExplanation = true;
              questionsUpdated++;
              quizModified = true;
              console.log('‚úÖ Explica√ß√£o atualizada');
              break;
            }
          }
          
          if (!foundExplanation) {
            console.log('‚ö†Ô∏è N√£o foi encontrada uma explica√ß√£o detalhada para esta pergunta');
          }
        }
      }
      
      // Salvar o quiz se foi modificado
      if (quizModified) {
        await quiz.save();
        console.log(`‚úÖ Quiz ${quiz.title} atualizado com explica√ß√µes detalhadas`);
      }
    }
    
    console.log(`\nüìä Total de explica√ß√µes atualizadas: ${questionsUpdated}`);
    
  } catch (error) {
    console.error('‚ùå Erro ao atualizar explica√ß√µes:', error);
  }
};

// Executar o script
const main = async () => {
  try {
    await connectDB();
    await fixRemainingMusicQuestions();
    console.log('\n‚ú® Processo conclu√≠do!');
    process.exit(0);
  } catch (error) {
    console.error('\n‚ùå Erro fatal durante a execu√ß√£o:', error);
    process.exit(1);
  }
};

// Iniciar o script
main();





















